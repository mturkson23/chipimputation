sudo: required
language: python
jdk: openjdk8
services: docker
python: '3.6'
cache: pip
matrix:
  fast_finish: true

# before_install:
#   # PRs to master are only ok if coming from dev branch
#   - '[ $TRAVIS_PULL_REQUEST = "false" ] || [ $TRAVIS_BRANCH != "master" ] || ([ $TRAVIS_PULL_REQUEST_SLUG = $TRAVIS_REPO_SLUG ] && [ $TRAVIS_PULL_REQUEST_BRANCH = "dev" ])'
#   # Pull the docker image first so the test doesn't wait for this
#   - docker pull nfcore/ampliseq:dev
#   # Fake the tag locally so that the pipeline runs properly
#   - docker tag nfcore/ampliseq:dev nfcore/ampliseq:1.1.0

install:
  # Install Nextflow
  - mkdir /tmp/nextflow
  - cd /tmp/nextflow
  - wget -qO- get.nextflow.io | bash
  - sudo ln -s /tmp/nextflow/nextflow /usr/local/bin/nextflow
  # Install nf-core/tools
  - pip install --upgrade pip
  - pip install nf-core
  # Reset
  - mkdir ${TRAVIS_BUILD_DIR}/tests && cd ${TRAVIS_BUILD_DIR}/tests
  # Install markdownlint-cli
  - sudo apt-get install npm && npm install -g markdownlint-cli
  
  # Install libarchive for ubuntu environment before Singularity
  - sudo apt install libarchive-dev  
  
  # Install singularity
  - mkdir /tmp/singularity
  - cd /tmp/singularity
  - wget https://github.com/singularityware/singularity/releases/download/2.5.2/singularity-2.5.2.tar.gz
  - tar xvf singularity-2.5.2.tar.gz
  - cd singularity-2.5.2
  - ./configure --prefix=/usr/local
  - make
  - sudo make install

env:
  - NXF_VER=19.04.1 # Specify a minimum NF version that should be tested and work
#   - NXF_VER='19.01.0' # Plus: get the latest NF version and check, that it works

script:
  # Lint the pipeline code
  #- nf-core lint ${TRAVIS_BUILD_DIR}
  # Run the pipeline with the test profile
  - nextflow run h3abionet/chipimputation -r master -profile test,singularity
